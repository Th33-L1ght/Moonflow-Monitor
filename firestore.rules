
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper functions to check user roles against a document
    function isParent(docData) {
      return request.auth.uid == docData.parentUid;
    }

    function isLinkedChild(docData) {
      return 'childUid' in docData && request.auth.uid == docData.childUid;
    }
    
    match /children/{childId} {
      // Who can read? The parent OR the linked child.
      allow read: if isParent(resource.data) || isLinkedChild(resource.data);
      
      // Who can update? The parent OR the linked child.
      allow update: if isParent(resource.data) || isLinkedChild(resource.data);

      // Who can create? Any authenticated user creating a profile for themself.
      // request.resource.data refers to the document as it would be after the create operation.
      allow create: if request.auth.uid == request.resource.data.parentUid;

      // Who can delete? Only the parent.
      allow delete: if isParent(resource.data);
    }

    match /invites/{inviteId} {
      allow create: if request.auth.uid == request.resource.data.parentUid;
      allow read: if request.auth.uid == resource.data.parentUid;
      allow update: if request.auth.uid == resource.data.parentUid;
    }

    match /feedback/{feedbackId} {
      allow create: if request.auth.uid == request.resource.data.userId;
    }
  }
}
