
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    match /children/{childId} {
      // CREATE: Allow a logged-in user to create a profile if they set themselves as the parent.
      allow create: if request.auth != null && request.auth.uid == request.resource.data.parentUid;

      // READ: Allow a user to read a profile if they are the parent or the linked child.
      allow read: if request.auth != null && (request.auth.uid == resource.data.parentUid || request.auth.uid == resource.data.childUid);

      // UPDATE: Allow a user to update a profile if they are the parent or the linked child.
      allow update: if request.auth != null && (request.auth.uid == resource.data.parentUid || request.auth.uid == resource.data.childUid);
      
      // DELETE: Allow a user to delete a profile only if they are the parent.
      allow delete: if request.auth != null && request.auth.uid == resource.data.parentUid;
    }

    match /feedback/{feedbackId} {
      allow create: if request.auth != null && request.auth.uid == request.resource.data.userId;
      // No one can read/update/delete feedback directly.
      allow read, update, delete: if false;
    }

    match /invites/{inviteId} {
      allow create: if request.auth != null && request.auth.uid == request.resource.data.parentUid;
      // Any authenticated user can read or update an invite to check its status or accept it.
      allow read, update: if request.auth != null;
      allow delete: if false;
    }
  }
}
