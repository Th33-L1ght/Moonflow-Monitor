rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    match /children/{childId} {
      // Allow create if the user is logged in and is the parentUid in the new document.
      allow create: if request.auth != null && request.auth.uid == request.resource.data.parentUid;
      
      // Allow read/update if the user is the parent or the linked child.
      allow read, update: if request.auth != null && 
                          (request.auth.uid == resource.data.parentUid || request.auth.uid == resource.data.childUid);

      // Only the parent can delete.
      allow delete: if request.auth != null && request.auth.uid == resource.data.parentUid;
    }

    match /invites/{inviteId} {
      // Parent can create an invite for their own child profile
      allow create: if request.auth != null && request.auth.uid == request.resource.data.parentUid;
      // Any authenticated user can read an invite (to see child name)
      // and update it (to accept it).
      allow read, update: if request.auth != null;
    }
    
    match /feedback/{feedbackId} {
        allow create: if request.auth != null && request.resource.data.userId == request.auth.uid;
    }
  }
}
